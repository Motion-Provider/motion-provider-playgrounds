import { useMemo } from "react";
import { ReduxRootState } from "@/redux";
import { useSelector } from "react-redux";
import { useCopyToClipboard } from "@uidotdev/usehooks";
import InfoBoxScrollLayout from "@/layouts/infobox-scroll-layout";
import { PrismLight as SyntaxHighlighter } from "react-syntax-highlighter";
import tsx from "react-syntax-highlighter/dist/cjs/languages/prism/tsx";
import tomorrow from "react-syntax-highlighter/dist/cjs/styles/prism/tomorrow";
import { CopyCode } from "@/components/copy-code";
import getCodeView from "@/utils/getCodeView";

SyntaxHighlighter?.registerLanguage("typescript", tsx);

const defaultComment = `
This code is generated by the playground 
engine and matches with the current state 
of the animation. You can copy&paste, 
ready-to-use in seconds!
`;

const Syntax = () => {
  const [copiedText, copyToClipboard] = useCopyToClipboard();
  const currentCodeID = crypto.randomUUID().slice(0, 6);

  const { metadata, motion } = useSelector((state: ReduxRootState) => state);

  const handleCopyCode = () => copyToClipboard(code);

  const code = useMemo(
    () =>
      getCodeView({
        id: currentCodeID,
        metadata,
        motion,
        comment: defaultComment,
        commentIncluded: true,
      }),
    [metadata, motion, currentCodeID]
  );

  return (
    <InfoBoxScrollLayout className="w-full">
      <SyntaxHighlighter
        language="typescript"
        style={tomorrow}
        customStyle={{
          backgroundColor: "rgba(0, 0, 0, 0)",
          fontSize: "0.75rem",
          width: "100%",
          height: "100%",
        }}
        lineNumberStyle={{ color: "#666" }}
        showLineNumbers
      >
        {code}
      </SyntaxHighlighter>
      <CopyCode
        variant={"outline"}
        onClick={handleCopyCode}
        className="absolute bottom-8 right-8 z-50"
      />
    </InfoBoxScrollLayout>
  );
};

export default Syntax;
